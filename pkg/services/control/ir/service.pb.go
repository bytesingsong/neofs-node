// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.25.1
// source: pkg/services/control/ir/service.proto

package control

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Health check request.
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of health check request message.
	Body *HealthCheckRequest_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	// Should be signed by node key or one of
	// the keys configured by the node.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetBody() *HealthCheckRequest_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HealthCheckRequest) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Health check response.
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of health check response message.
	Body *HealthCheckResponse_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetBody() *HealthCheckResponse_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *HealthCheckResponse) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// NotaryList request.
type NotaryListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of request message.
	Body *NotaryListRequest_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryListRequest) Reset() {
	*x = NotaryListRequest{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryListRequest) ProtoMessage() {}

func (x *NotaryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryListRequest.ProtoReflect.Descriptor instead.
func (*NotaryListRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{2}
}

func (x *NotaryListRequest) GetBody() *NotaryListRequest_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotaryListRequest) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// NotaryList response.
type NotaryListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of request message.
	Body *NotaryListResponse_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryListResponse) Reset() {
	*x = NotaryListResponse{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryListResponse) ProtoMessage() {}

func (x *NotaryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryListResponse.ProtoReflect.Descriptor instead.
func (*NotaryListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{3}
}

func (x *NotaryListResponse) GetBody() *NotaryListResponse_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotaryListResponse) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// NotaryRequest request.
type NotaryRequestRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of request message.
	Body *NotaryRequestRequest_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryRequestRequest) Reset() {
	*x = NotaryRequestRequest{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryRequestRequest) ProtoMessage() {}

func (x *NotaryRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryRequestRequest.ProtoReflect.Descriptor instead.
func (*NotaryRequestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{4}
}

func (x *NotaryRequestRequest) GetBody() *NotaryRequestRequest_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotaryRequestRequest) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// NotaryRequest response.
type NotaryRequestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of request message.
	Body *NotaryRequestResponse_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryRequestResponse) Reset() {
	*x = NotaryRequestResponse{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryRequestResponse) ProtoMessage() {}

func (x *NotaryRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryRequestResponse.ProtoReflect.Descriptor instead.
func (*NotaryRequestResponse) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{5}
}

func (x *NotaryRequestResponse) GetBody() *NotaryRequestResponse_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotaryRequestResponse) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// NotarySign request.
type NotarySignRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of request message.
	Body *NotarySignRequest_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotarySignRequest) Reset() {
	*x = NotarySignRequest{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotarySignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotarySignRequest) ProtoMessage() {}

func (x *NotarySignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotarySignRequest.ProtoReflect.Descriptor instead.
func (*NotarySignRequest) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{6}
}

func (x *NotarySignRequest) GetBody() *NotarySignRequest_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotarySignRequest) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// NotarySign response.
type NotarySignResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Body of request message.
	Body *NotarySignResponse_Body `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// Body signature.
	Signature     *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotarySignResponse) Reset() {
	*x = NotarySignResponse{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotarySignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotarySignResponse) ProtoMessage() {}

func (x *NotarySignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotarySignResponse.ProtoReflect.Descriptor instead.
func (*NotarySignResponse) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{7}
}

func (x *NotarySignResponse) GetBody() *NotarySignResponse_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotarySignResponse) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Health check request body.
type HealthCheckRequest_Body struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest_Body) Reset() {
	*x = HealthCheckRequest_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest_Body) ProtoMessage() {}

func (x *HealthCheckRequest_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest_Body.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{0, 0}
}

// Health check response body
type HealthCheckResponse_Body struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Health status of IR node application.
	HealthStatus  HealthStatus `protobuf:"varint,1,opt,name=health_status,json=healthStatus,proto3,enum=ircontrol.HealthStatus" json:"health_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse_Body) Reset() {
	*x = HealthCheckResponse_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse_Body) ProtoMessage() {}

func (x *HealthCheckResponse_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse_Body.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *HealthCheckResponse_Body) GetHealthStatus() HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return HealthStatus_HEALTH_STATUS_UNDEFINED
}

// Request body structure.
type NotaryListRequest_Body struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryListRequest_Body) Reset() {
	*x = NotaryListRequest_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryListRequest_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryListRequest_Body) ProtoMessage() {}

func (x *NotaryListRequest_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryListRequest_Body.ProtoReflect.Descriptor instead.
func (*NotaryListRequest_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{2, 0}
}

// Request body structure.
type NotaryListResponse_Body struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transaction of the notary request.
	Transactions  []*TransactionInfo `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryListResponse_Body) Reset() {
	*x = NotaryListResponse_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryListResponse_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryListResponse_Body) ProtoMessage() {}

func (x *NotaryListResponse_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryListResponse_Body.ProtoReflect.Descriptor instead.
func (*NotaryListResponse_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *NotaryListResponse_Body) GetTransactions() []*TransactionInfo {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Request body structure.
type NotaryRequestRequest_Body struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Args          [][]byte               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryRequestRequest_Body) Reset() {
	*x = NotaryRequestRequest_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryRequestRequest_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryRequestRequest_Body) ProtoMessage() {}

func (x *NotaryRequestRequest_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryRequestRequest_Body.ProtoReflect.Descriptor instead.
func (*NotaryRequestRequest_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *NotaryRequestRequest_Body) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *NotaryRequestRequest_Body) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

// Request body structure.
type NotaryRequestResponse_Body struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result hash of transaction.
	Hash          []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotaryRequestResponse_Body) Reset() {
	*x = NotaryRequestResponse_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotaryRequestResponse_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotaryRequestResponse_Body) ProtoMessage() {}

func (x *NotaryRequestResponse_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotaryRequestResponse_Body.ProtoReflect.Descriptor instead.
func (*NotaryRequestResponse_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *NotaryRequestResponse_Body) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// Request body structure.
type NotarySignRequest_Body struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Hash of transaction that need to be signed.
	Hash          []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotarySignRequest_Body) Reset() {
	*x = NotarySignRequest_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotarySignRequest_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotarySignRequest_Body) ProtoMessage() {}

func (x *NotarySignRequest_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotarySignRequest_Body.ProtoReflect.Descriptor instead.
func (*NotarySignRequest_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *NotarySignRequest_Body) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// Request body structure.
type NotarySignResponse_Body struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotarySignResponse_Body) Reset() {
	*x = NotarySignResponse_Body{}
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotarySignResponse_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotarySignResponse_Body) ProtoMessage() {}

func (x *NotarySignResponse_Body) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_services_control_ir_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotarySignResponse_Body.ProtoReflect.Descriptor instead.
func (*NotarySignResponse_Body) Descriptor() ([]byte, []int) {
	return file_pkg_services_control_ir_service_proto_rawDescGZIP(), []int{7, 0}
}

var File_pkg_services_control_ir_service_proto protoreflect.FileDescriptor

var file_pkg_services_control_ir_service_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x69, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x1a, 0x23, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x69, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69,
	0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x06, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0xc8, 0x01, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x44, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x3c, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x86, 0x01,
	0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f,
	0x74, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x06,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x61, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x72,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x46, 0x0a, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xb8, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x32, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0xa2, 0x01, 0x0a,
	0x15, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x32,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x88,
	0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x32, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x1a, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x32, 0xc8, 0x02, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0b,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1d, 0x2e, 0x69, 0x72,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x72, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x4e, 0x6f,
	0x74, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x4e, 0x6f, 0x74,
	0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x73, 0x70, 0x63, 0x63, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x6e, 0x65, 0x6f,
	0x66, 0x73, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_services_control_ir_service_proto_rawDescOnce sync.Once
	file_pkg_services_control_ir_service_proto_rawDescData []byte
)

func file_pkg_services_control_ir_service_proto_rawDescGZIP() []byte {
	file_pkg_services_control_ir_service_proto_rawDescOnce.Do(func() {
		file_pkg_services_control_ir_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_services_control_ir_service_proto_rawDesc), len(file_pkg_services_control_ir_service_proto_rawDesc)))
	})
	return file_pkg_services_control_ir_service_proto_rawDescData
}

var file_pkg_services_control_ir_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_services_control_ir_service_proto_goTypes = []any{
	(*HealthCheckRequest)(nil),         // 0: ircontrol.HealthCheckRequest
	(*HealthCheckResponse)(nil),        // 1: ircontrol.HealthCheckResponse
	(*NotaryListRequest)(nil),          // 2: ircontrol.NotaryListRequest
	(*NotaryListResponse)(nil),         // 3: ircontrol.NotaryListResponse
	(*NotaryRequestRequest)(nil),       // 4: ircontrol.NotaryRequestRequest
	(*NotaryRequestResponse)(nil),      // 5: ircontrol.NotaryRequestResponse
	(*NotarySignRequest)(nil),          // 6: ircontrol.NotarySignRequest
	(*NotarySignResponse)(nil),         // 7: ircontrol.NotarySignResponse
	(*HealthCheckRequest_Body)(nil),    // 8: ircontrol.HealthCheckRequest.Body
	(*HealthCheckResponse_Body)(nil),   // 9: ircontrol.HealthCheckResponse.Body
	(*NotaryListRequest_Body)(nil),     // 10: ircontrol.NotaryListRequest.Body
	(*NotaryListResponse_Body)(nil),    // 11: ircontrol.NotaryListResponse.Body
	(*NotaryRequestRequest_Body)(nil),  // 12: ircontrol.NotaryRequestRequest.Body
	(*NotaryRequestResponse_Body)(nil), // 13: ircontrol.NotaryRequestResponse.Body
	(*NotarySignRequest_Body)(nil),     // 14: ircontrol.NotarySignRequest.Body
	(*NotarySignResponse_Body)(nil),    // 15: ircontrol.NotarySignResponse.Body
	(*Signature)(nil),                  // 16: ircontrol.Signature
	(HealthStatus)(0),                  // 17: ircontrol.HealthStatus
	(*TransactionInfo)(nil),            // 18: ircontrol.TransactionInfo
}
var file_pkg_services_control_ir_service_proto_depIdxs = []int32{
	8,  // 0: ircontrol.HealthCheckRequest.body:type_name -> ircontrol.HealthCheckRequest.Body
	16, // 1: ircontrol.HealthCheckRequest.signature:type_name -> ircontrol.Signature
	9,  // 2: ircontrol.HealthCheckResponse.body:type_name -> ircontrol.HealthCheckResponse.Body
	16, // 3: ircontrol.HealthCheckResponse.signature:type_name -> ircontrol.Signature
	10, // 4: ircontrol.NotaryListRequest.body:type_name -> ircontrol.NotaryListRequest.Body
	16, // 5: ircontrol.NotaryListRequest.signature:type_name -> ircontrol.Signature
	11, // 6: ircontrol.NotaryListResponse.body:type_name -> ircontrol.NotaryListResponse.Body
	16, // 7: ircontrol.NotaryListResponse.signature:type_name -> ircontrol.Signature
	12, // 8: ircontrol.NotaryRequestRequest.body:type_name -> ircontrol.NotaryRequestRequest.Body
	16, // 9: ircontrol.NotaryRequestRequest.signature:type_name -> ircontrol.Signature
	13, // 10: ircontrol.NotaryRequestResponse.body:type_name -> ircontrol.NotaryRequestResponse.Body
	16, // 11: ircontrol.NotaryRequestResponse.signature:type_name -> ircontrol.Signature
	14, // 12: ircontrol.NotarySignRequest.body:type_name -> ircontrol.NotarySignRequest.Body
	16, // 13: ircontrol.NotarySignRequest.signature:type_name -> ircontrol.Signature
	15, // 14: ircontrol.NotarySignResponse.body:type_name -> ircontrol.NotarySignResponse.Body
	16, // 15: ircontrol.NotarySignResponse.signature:type_name -> ircontrol.Signature
	17, // 16: ircontrol.HealthCheckResponse.Body.health_status:type_name -> ircontrol.HealthStatus
	18, // 17: ircontrol.NotaryListResponse.Body.transactions:type_name -> ircontrol.TransactionInfo
	0,  // 18: ircontrol.ControlService.HealthCheck:input_type -> ircontrol.HealthCheckRequest
	2,  // 19: ircontrol.ControlService.NotaryList:input_type -> ircontrol.NotaryListRequest
	4,  // 20: ircontrol.ControlService.NotaryRequest:input_type -> ircontrol.NotaryRequestRequest
	6,  // 21: ircontrol.ControlService.NotarySign:input_type -> ircontrol.NotarySignRequest
	1,  // 22: ircontrol.ControlService.HealthCheck:output_type -> ircontrol.HealthCheckResponse
	3,  // 23: ircontrol.ControlService.NotaryList:output_type -> ircontrol.NotaryListResponse
	5,  // 24: ircontrol.ControlService.NotaryRequest:output_type -> ircontrol.NotaryRequestResponse
	7,  // 25: ircontrol.ControlService.NotarySign:output_type -> ircontrol.NotarySignResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pkg_services_control_ir_service_proto_init() }
func file_pkg_services_control_ir_service_proto_init() {
	if File_pkg_services_control_ir_service_proto != nil {
		return
	}
	file_pkg_services_control_ir_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_services_control_ir_service_proto_rawDesc), len(file_pkg_services_control_ir_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_services_control_ir_service_proto_goTypes,
		DependencyIndexes: file_pkg_services_control_ir_service_proto_depIdxs,
		MessageInfos:      file_pkg_services_control_ir_service_proto_msgTypes,
	}.Build()
	File_pkg_services_control_ir_service_proto = out.File
	file_pkg_services_control_ir_service_proto_goTypes = nil
	file_pkg_services_control_ir_service_proto_depIdxs = nil
}
