package crypto_test

import (
	"crypto/ecdsa"
	"crypto/elliptic"
	"math/big"

	"github.com/nspcc-dev/neofs-sdk-go/user"
)

var (
	// ECDSA private keys used in tests.
	// mainAccECDSAPriv = ecdsa.PrivateKey{
	// 	PublicKey: ecdsa.PublicKey{
	// 		Curve: elliptic.P256(),
	// 		X: new(big.Int).SetBytes([]byte{206, 67, 193, 231, 254, 180, 127, 78, 101, 154, 23, 161, 134, 77, 122, 34, 234, 85,
	// 			149, 44, 32, 223, 244, 140, 28, 194, 76, 214, 239, 121, 174, 40}),
	// 		Y: new(big.Int).SetBytes([]byte{170, 190, 155, 176, 31, 11, 4, 14, 103, 210, 53, 0, 73, 46, 81, 129, 163, 217, 81, 51, 111,
	// 			135, 223, 253, 48, 104, 240, 197, 122, 37, 197, 78}),
	// 	},
	// 	D: new(big.Int).SetBytes([]byte{185, 97, 226, 151, 175, 3, 234, 11, 168, 211, 53, 141, 136, 102, 100, 222, 73, 174, 234, 157,
	// 		139, 192, 66, 145, 13, 173, 12, 120, 22, 134, 52, 180}),
	// }
	// otherAccECDSAPriv = ecdsa.PrivateKey{
	// 	PublicKey: ecdsa.PublicKey{
	// 		Curve: elliptic.P256(),
	// 		X: new(big.Int).SetBytes([]byte{58, 217, 243, 193, 223, 67, 11, 57, 49, 133, 93, 146, 168, 181, 157, 180, 130, 211,
	// 			230, 73, 221, 67, 79, 77, 245, 12, 77, 232, 212, 229, 133, 179}),
	// 		Y: new(big.Int).SetBytes([]byte{106, 238, 96, 220, 235, 118, 210, 45, 173, 136, 165, 220, 34, 31, 43, 94, 161, 101,
	// 			250, 6, 22, 121, 176, 82, 245, 233, 242, 232, 25, 14, 173, 139}),
	// 	},
	// 	D: new(big.Int).SetBytes([]byte{65, 188, 132, 92, 41, 230, 185, 242, 177, 45, 170, 2, 169, 227, 46, 7, 247, 72, 140, 216,
	// 		201, 49, 53, 138, 59, 7, 116, 42, 98, 96, 187, 6}),
	// }.
	sessionSubjECDSAPriv = ecdsa.PrivateKey{
		PublicKey: ecdsa.PublicKey{
			Curve: elliptic.P256(),
			X: new(big.Int).SetBytes([]byte{40, 129, 57, 147, 89, 55, 169, 130, 236, 235, 28, 78, 89, 67, 56, 22, 254, 198,
				188, 162, 81, 108, 91, 215, 210, 46, 119, 229, 169, 188, 20, 37}),
			Y: new(big.Int).SetBytes([]byte{222, 144, 165, 123, 231, 88, 198, 147, 113, 150, 12, 27, 187, 115, 10, 60, 132, 132,
				29, 225, 194, 252, 91, 58, 226, 21, 167, 119, 13, 50, 25, 126}),
		},
		D: new(big.Int).SetBytes([]byte{120, 160, 43, 181, 127, 56, 250, 48, 132, 233, 73, 45, 234, 0, 35, 152, 199, 161, 215, 129,
			183, 109, 92, 27, 11, 52, 135, 91, 50, 219, 101, 63}),
	}
	// correspond to private keys.
	mainAccECDSAPub = []byte{2, 206, 67, 193, 231, 254, 180, 127, 78, 101, 154, 23, 161, 134, 77, 122, 34, 234, 85, 149, 44, 32, 223,
		244, 140, 28, 194, 76, 214, 239, 121, 174, 40}
	otherAccECDSAPub = []byte{3, 58, 217, 243, 193, 223, 67, 11, 57, 49, 133, 93, 146, 168, 181, 157, 180, 130, 211, 230, 73,
		221, 67, 79, 77, 245, 12, 77, 232, 212, 229, 133, 179}
	sessionSubjECDSAPub = []byte{2, 40, 129, 57, 147, 89, 55, 169, 130, 236, 235, 28, 78, 89, 67, 56, 22, 254, 198, 188, 162, 81,
		108, 91, 215, 210, 46, 119, 229, 169, 188, 20, 37}
	// correspond to private keys.
	mainAcc  = user.ID{53, 57, 243, 96, 136, 255, 217, 227, 204, 13, 243, 228, 109, 31, 226, 226, 236, 62, 13, 190, 156, 135, 252, 236, 8}
	otherAcc = user.ID{53, 163, 155, 73, 202, 138, 140, 26, 17, 172, 252, 131, 193, 57, 6, 57, 45, 49, 195, 74, 22, 164, 52, 252, 175}
)
